services:
  # Traefik Reverse Proxy
  reverse-proxy:
    image: traefik:v2.10
    container_name: cloudbox-reverse-proxy
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=INFO"
    ports:
      - "8080:80"
      - "8081:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - cloudbox-network
    restart: unless-stopped

  # Backend Service (PHP API)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cloudbox-backend
    volumes:
      # Mount data directory as volume to persist files
      - ./backend/data:/var/www/html/data
      # Mount a volume for SQLite database persistence
      - backend_db:/var/www/html
    environment:
      - PHP_INI_SCAN_DIR=/usr/local/etc/php/conf.d
    networks:
      - cloudbox-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      # API routes
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.backend.middlewares=api-stripprefix,cors"
      - "traefik.http.services.backend.loadbalancer.server.port=80"
      # CORS middleware
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"

  # Frontend Service (Static files)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cloudbox-frontend
    networks:
      - cloudbox-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      # Frontend routes (catch all except /api)
      - "traefik.http.routers.frontend.rule=Host(`localhost`) && !PathPrefix(`/api`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.priority=1"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

volumes:
  # Volume for backend database persistence
  backend_db:

networks:
  cloudbox-network:
    driver: bridge
